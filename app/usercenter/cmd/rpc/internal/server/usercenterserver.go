// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package server

import (
	"context"

	"go-zero-bookstore/app/usercenter/cmd/rpc/internal/logic"
	"go-zero-bookstore/app/usercenter/cmd/rpc/internal/svc"
	"go-zero-bookstore/app/usercenter/cmd/rpc/usercenter"
)

type UsercenterServer struct {
	svcCtx *svc.ServiceContext
	usercenter.UnimplementedUsercenterServer
}

func NewUsercenterServer(svcCtx *svc.ServiceContext) *UsercenterServer {
	return &UsercenterServer{
		svcCtx: svcCtx,
	}
}

func (s *UsercenterServer) Register(ctx context.Context, in *usercenter.RegisterReq) (*usercenter.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UsercenterServer) Login(ctx context.Context, in *usercenter.LoginReq) (*usercenter.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UsercenterServer) GetUserInfo(ctx context.Context, in *usercenter.GetUserInfoReq) (*usercenter.GetUserInfoResp, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UsercenterServer) GetUserByMobile(ctx context.Context, in *usercenter.GetUserByMobileReq) (*usercenter.GetUserByMobileResp, error) {
	l := logic.NewGetUserByMobileLogic(ctx, s.svcCtx)
	return l.GetUserByMobile(in)
}

func (s *UsercenterServer) UpdateUser(ctx context.Context, in *usercenter.UpdateUserReq) (*usercenter.UpdateUserResp, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UsercenterServer) ExistUserByUserId(ctx context.Context, in *usercenter.ExistUserByUserIdReq) (*usercenter.ExistUserByUserIdResp, error) {
	l := logic.NewExistUserByUserIdLogic(ctx, s.svcCtx)
	return l.ExistUserByUserId(in)
}

func (s *UsercenterServer) ExistUserByMobile(ctx context.Context, in *usercenter.ExistUserByMobileReq) (*usercenter.ExistUserByMobileResp, error) {
	l := logic.NewExistUserByMobileLogic(ctx, s.svcCtx)
	return l.ExistUserByMobile(in)
}

func (s *UsercenterServer) GenerateToken(ctx context.Context, in *usercenter.GenerateTokenReq) (*usercenter.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}
